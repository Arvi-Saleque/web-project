generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String          @id @default(cuid())
  email          String          @unique
  password       String
  name           String
  role           UserRole        @default(STUDENT)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  adminProfile   AdminProfile?
  studentProfile StudentProfile?
  teacherProfile TeacherProfile?

  @@index([email])
}

model AdminProfile {
  id        String   @id @default(cuid())
  userId    String   @unique
  position  String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TeacherProfile {
  id            String   @id @default(cuid())
  userId        String   @unique
  subject       String?
  qualification String?
  phone         String?
  address       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model StudentProfile {
  id          String    @id @default(cuid())
  userId      String    @unique
  rollNumber  String?   @unique
  class       String?
  section     String?
  dateOfBirth DateTime?
  parentName  String?
  parentPhone String?
  address     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([rollNumber])
}

model HeaderSlide {
  id              String   @id @default(cuid())
  image           String
  title           String
  subtitle        String
  description     String
  primaryButton   String
  secondaryButton String
  order           Int      @default(0)
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([order])
  @@index([isActive])
}

model HomepageStat {
  id        String   @id @default(cuid())
  label     String
  value     String
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([order])
}

model HomepageFeature {
  id          String   @id @default(cuid())
  title       String
  description String
  icon        String
  iconColor   String
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([order])
}

model Assignment {
  id             String   @id @default(cuid())
  class          String
  section        String
  subject        String
  name           String
  instructions   String
  assignDate     DateTime
  submissionDate DateTime
  marks          Int
  priority       String
  order          Int      @default(0)
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([class])
  @@index([subject])
  @@index([priority])
  @@index([order])
}

model ExamRoutine {
  id        String   @id @default(cuid())
  examName  String
  grade     String
  examType  String
  startDate DateTime
  endDate   DateTime
  imageUrl  String
  pdfUrl    String
  status    String
  totalDays Int
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([grade])
  @@index([examType])
  @@index([status])
  @@index([order])
}

model ClassRoutine {
  id          String   @id @default(cuid())
  grade       String
  section     String
  term        String
  imageUrl    String
  pdfUrl      String
  updatedDate DateTime
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([grade])
  @@index([section])
  @@index([order])
}

model ExamResult {
  id             String   @id @default(cuid())
  examName       String
  grade          String
  examType       String
  publishedDate  DateTime
  imageUrl       String
  pdfUrl         String
  status         String
  passPercentage Int
  order          Int      @default(0)
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([grade])
  @@index([examType])
  @@index([status])
  @@index([order])
}

// About Us Section
model AboutSection {
  id              String   @id @default(cuid())
  title           String   // e.g., "About Our Madrasa"
  subtitle        String   // e.g., "Nurturing Islamic Knowledge & Excellence Since 1999"
  establishedYear Int      // e.g., 1999
  storyTitle      String   // e.g., "Building a Legacy of Islamic Education"
  storyContent    String   @db.Text // Main story/description
  storyImageUrl   String   // Main story image
  heroImageUrl    String?  // Hero section background image (optional)
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// About Us Statistics
model AboutStat {
  id        String   @id @default(cuid())
  label     String   // e.g., "Students", "Teachers"
  value     String   // e.g., "2000+", "150+"
  icon      String   // Icon name from lucide-react (e.g., "Users", "GraduationCap")
  color     String   // Tailwind color class (e.g., "text-cyan-600")
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([order])
}

// About Us Core Values
model AboutValue {
  id          String   @id @default(cuid())
  title       String   // e.g., "Faith & Character"
  description String   @db.Text // Description of the value
  icon        String   // Icon name from lucide-react
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([order])
}

// About Us FAQ
model AboutFAQ {
  id        String   @id @default(cuid())
  question  String   // FAQ question
  answer    String   @db.Text // FAQ answer
  order     Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([order])
}

enum UserRole {
  ADMIN
  TEACHER
  STUDENT
}
