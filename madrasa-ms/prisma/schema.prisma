datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")   // use the pooled Neon URL
  directUrl = env("DIRECT_URL")    // optional: non-pooled URL for migrations
}

generator client {
  provider = "prisma-client-js"
}

// User model for authentication
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String   // Hashed password
  name      String
  role      UserRole @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Profile relations based on role
  adminProfile    AdminProfile?
  teacherProfile  TeacherProfile?
  studentProfile  StudentProfile?

  @@index([email])
}

enum UserRole {
  ADMIN
  TEACHER
  STUDENT
}

// Admin Profile
model AdminProfile {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  position  String?  // e.g., "Principal", "Vice Principal"
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Teacher Profile
model TeacherProfile {
  id           String   @id @default(cuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  subject      String?
  qualification String?
  phone        String?
  address      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// Student Profile
model StudentProfile {
  id           String   @id @default(cuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  rollNumber   String?  @unique
  class        String?
  section      String?
  dateOfBirth  DateTime?
  parentName   String?
  parentPhone  String?
  address      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([rollNumber])
}

// Header Slider for homepage
model HeaderSlide {
  id              String   @id @default(cuid())
  image           String
  title           String
  subtitle        String
  description     String
  primaryButton   String
  secondaryButton String
  order           Int      @default(0)
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([order])
  @@index([isActive])
}

// Homepage Statistics
model HomepageStat {
  id          String   @id @default(cuid())
  label       String   // e.g., "Students", "Teachers"
  value       String   // e.g., "500+", "50+"
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([order])
}

// Homepage Features (Why Choose Us)
model HomepageFeature {
  id          String   @id @default(cuid())
  title       String
  description String
  icon        String   // Icon name from lucide-react
  iconColor   String   // e.g., "cyan", "blue", "purple"
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([order])
}

// Academic Assignments
model Assignment {
  id             String   @id @default(cuid())
  class          String   // e.g., "Grade 10"
  section        String   // e.g., "A", "B", "C"
  subject        String   // e.g., "Islamic Studies", "Arabic"
  name           String   // Assignment title
  instructions   String   @db.Text // Detailed instructions
  assignDate     DateTime // Date when assignment was given
  submissionDate DateTime // Due date for submission
  marks          Int      // Total marks
  priority       String   // "high", "medium", "low"
  order          Int      @default(0)
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([class])
  @@index([subject])
  @@index([priority])
  @@index([order])
}